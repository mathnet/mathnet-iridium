
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>Fn - Math.NET Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../MathNet.Numerics/index.htm" class="current">MathNet.Numerics</a>
      </li><li>
          <a href="../MathNet.Numerics.Distributions/index.htm">MathNet.Numerics.Distributions</a>
      </li><li>
          <a href="../MathNet.Numerics.Interpolation/index.htm">MathNet.Numerics.Interpolation</a>
      </li><li>
          <a href="../MathNet.Numerics.Interpolation.Algorithms/index.htm">MathNet.Numerics.Interpolation.Algorithms</a>
      </li><li>
          <a href="../MathNet.Numerics.LinearAlgebra/index.htm">MathNet.Numerics.LinearAlgebra</a>
      </li><li>
          <a href="../MathNet.Numerics.RandomSources/index.htm">MathNet.Numerics.RandomSources</a>
      </li><li>
          <a href="../MathNet.Numerics.Statistics/index.htm">MathNet.Numerics.Statistics</a>
      </li><li>
          <a href="../MathNet.Numerics.Transformations/index.htm">MathNet.Numerics.Transformations</a>
      </li>
		</ul>
	</div>
</div><div id="types">
	<h2 class="fixed">Types</h2>
	<div class="scroll">
		<ul><li>
            <a href="../MathNet.Numerics/Collection.htm">Collection</a>
        </li><li>
            <a href="../MathNet.Numerics/Combinatorics.htm">Combinatorics</a>
        </li><li>
            <a href="../MathNet.Numerics/Complex.htm">Complex</a>
        </li><li>
            <a href="../MathNet.Numerics/Constants.htm">Constants</a>
        </li><li>
            <a href="../MathNet.Numerics/Fn.htm" class="current">Fn</a>
        </li><li>
            <a href="../MathNet.Numerics/IRealFunction.htm">IRealFunction</a>
        </li><li>
            <a href="../MathNet.Numerics/ISet`1.htm">ISet&lt;T&gt;</a>
        </li><li>
            <a href="../MathNet.Numerics/Natural.htm">Natural</a>
        </li><li>
            <a href="../MathNet.Numerics/Number.htm">Number</a>
        </li><li>
            <a href="../MathNet.Numerics/Polynomial.htm">Polynomial</a>
        </li><li>
            <a href="../MathNet.Numerics/Quaternion.htm">Quaternion</a>
        </li><li>
            <a href="../MathNet.Numerics/Rational.htm">Rational</a>
        </li><li>
            <a href="../MathNet.Numerics/Ratios.htm">Ratios</a>
        </li><li>
            <a href="../MathNet.Numerics/ReadOnlySet`1.htm">ReadOnlySet&lt;T&gt;</a>
        </li><li>
            <a href="../MathNet.Numerics/SampleAlteredEventArgs.htm">SampleAlteredEventArgs</a>
        </li><li>
            <a href="../MathNet.Numerics/SampleList.htm">SampleList</a>
        </li><li>
            <a href="../MathNet.Numerics/Set`1.htm">Set&lt;T&gt;</a>
        </li><li>
            <a href="../MathNet.Numerics/SetChangedEventArgs`1.htm">SetChangedEventArgs&lt;T&gt;</a>
        </li><li>
            <a href="../MathNet.Numerics/SetElementOperation.htm">SetElementOperation</a>
        </li><li>
            <a href="../MathNet.Numerics/SiConstants.htm">SiConstants</a>
        </li><li>
            <a href="../MathNet.Numerics/SiPrefixes.htm">SiPrefixes</a>
        </li><li>
            <a href="../MathNet.Numerics/Sorting.htm">Sorting</a>
        </li><li>
            <a href="../MathNet.Numerics/Trig.htm">Trig</a>
        </li><li>
            <a href="../MathNet.Numerics/Tuple`2.htm">Tuple&lt;TFirst, TSecond&gt;</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> Fn</p>
		<p><strong>Namespace</strong> MathNet.Numerics</p>
	</div>
    <div class="sub-header">


			<h3 class="section">Methods</h3>
			<ul><li><a href="#Beta" class="type">Beta</a></li><li><a href="#BetaLn" class="type">BetaLn</a></li><li><a href="#BetaRegularized" class="type">BetaRegularized</a></li><li><a href="#BinomialCoefficient" class="type">BinomialCoefficient</a></li><li><a href="#BinomialCoefficientLn" class="type">BinomialCoefficientLn</a></li><li><a href="#CeilingToPowerOf2" class="type">CeilingToPowerOf2</a></li><li><a href="#Digamma" class="type">Digamma</a></li><li><a href="#Equals" class="type">Equals</a></li><li><a href="#Erf" class="type">Erf</a></li><li><a href="#ErfInverse" class="type">ErfInverse</a></li><li><a href="#Factorial" class="type">Factorial</a></li><li><a href="#FactorialLn" class="type">FactorialLn</a></li><li><a href="#FloorToPowerOf2" class="type">FloorToPowerOf2</a></li><li><a href="#Gamma" class="type">Gamma</a></li><li><a href="#GammaLn" class="type">GammaLn</a></li><li><a href="#GammaRegularized" class="type">GammaRegularized</a></li><li><a href="#Gcd" class="type">Gcd</a></li><li><a href="#Gcd" class="type">Gcd</a></li><li><a href="#GetHashCode" class="type">GetHashCode</a></li><li><a href="#GetType" class="type">GetType</a></li><li><a href="#HarmonicNumber" class="type">HarmonicNumber</a></li><li><a href="#Hypot" class="type">Hypot</a></li><li><a href="#IncompleteBetaRegularized" class="type">IncompleteBetaRegularized</a></li><li><a href="#IncompleteGammaRegularized" class="type">IncompleteGammaRegularized</a></li><li><a href="#IntLog2" class="type">IntLog2</a></li><li><a href="#IntPow" class="type">IntPow</a></li><li><a href="#IntPow2" class="type">IntPow2</a></li><li><a href="#Lcm" class="type">Lcm</a></li><li><a href="#Sinc" class="type">Sinc</a></li><li><a href="#ToString" class="type">ToString</a></li>
			</ul>


	</div>


	<h3 class="section">Public instance methods</h3>
<div id="Equals" class="method">
		<h4>bool <strong>Equals</strong>(object obj)</h4>
		<div class="content">

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.bool">bool</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.object">object</span></code> obj</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="GetHashCode" class="method">
		<h4>int <strong>GetHashCode</strong>()</h4>
		<div class="content">

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.int">int</span></code></td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="GetType" class="method">
		<h4>Type <strong>GetType</strong>()</h4>
		<div class="content">

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.Type">Type</span></code></td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="ToString" class="method">
		<h4>string <strong>ToString</strong>()</h4>
		<div class="content">

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.string">string</span></code></td>
					<td></td>
				</tr>
			</table>
		</div>
	</div>

	<h3 class="section">Public static methods</h3>
<div id="Beta" class="method">
		<h4>double <strong>Beta</strong>(double z, double w)</h4>
		<div class="content">Returns the Euler Beta function of real valued z > 0, w > 0.
Beta(z,w) = Beta(w,z).

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> z</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> w</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="BetaLn" class="method">
		<h4>double <strong>BetaLn</strong>(double z, double w)</h4>
		<div class="content">Returns the natural logarithm of the Euler Beta function of real valued z > 0, w > 0.
BetaLn(z,w) = BetaLn(w,z).

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> z</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> w</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="BetaRegularized" class="method">
		<h4>double <strong>BetaRegularized</strong>(double a, double b, double x)</h4>
		<div class="content">Returns the regularized lower incomplete beta function
I_x(a,b) = 1/Beta(a,b) * int(t^(a-1)*(1-t)^(b-1),t=0..x) for real a > 0, b > 0, 1 >= x >= 0.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> b</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="BinomialCoefficient" class="method">
		<h4>double <strong>BinomialCoefficient</strong>(int n, int k)</h4>
		<div class="content">Returns the binomial coefficient of n and k as a double precision number.<blockquote>
  If you need to multiply or divide various such coefficients, consider
using the logarithmic version <a href="">BinomialCoefficientLn</a> instead
so you can add instead of multiply and subtract instead of divide, and
then exponentiate the result using <a href="">Exp</a>.
</blockquote>

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> n</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> k</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="BinomialCoefficientLn" class="method">
		<h4>double <strong>BinomialCoefficientLn</strong>(int n, int k)</h4>
		<div class="content">Returns the natural logarithm of the binomial coefficient of n and k as a double precision number.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> n</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> k</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="CeilingToPowerOf2" class="method">
		<h4>int <strong>CeilingToPowerOf2</strong>(int value)</h4>
		<div class="content">Returns the smallest integer power of two bigger or equal to the value.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.int">int</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> value</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Digamma" class="method">
		<h4>double <strong>Digamma</strong>(double x)</h4>
		<div class="content">Returns the digamma (psi) function of real values (except at 0, -1, -2, ...).
Digamma is the logarithmic derivative of the <a href="">Gamma</a> function.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Erf" class="method">
		<h4>double <strong>Erf</strong>(double x)</h4>
		<div class="content">Returns the error function erf(x) = 2/sqrt(pi) * int(exp(-t^2),t=0..x)

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="ErfInverse" class="method">
		<h4>double <strong>ErfInverse</strong>(double x)</h4>
		<div class="content">Returns the inverse error function erf^-1(x).

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Factorial" class="method">
		<h4>double <strong>Factorial</strong>(int value)</h4>
		<div class="content">Returns the factorial (n!) of an integer number > 0. Consider using <a href="">FactorialLn</a> instead.<blockquote>
  If you need to multiply or divide various such factorials, consider
using the logarithmic version <a href="">FactorialLn</a> instead
so you can add instead of multiply and subtract instead of divide, and
then exponentiate the result using <a href="">Exp</a>.
This will also completely circumvent the problem that factorials
easily become very large.
</blockquote>

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> value</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="FactorialLn" class="method">
		<h4>double <strong>FactorialLn</strong>(int value)</h4>
		<div class="content">Returns the natural logarithm of the factorial (n!) for an integer value > 0.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> value</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="FloorToPowerOf2" class="method">
		<h4>int <strong>FloorToPowerOf2</strong>(int value)</h4>
		<div class="content">Returns the biggest integer power of two smaller or equal to the value.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.int">int</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> value</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Gamma" class="method">
		<h4>double <strong>Gamma</strong>(double value)</h4>
		<div class="content">Returns the gamma function for real values (except at 0, -1, -2, ...).
For numeric stability, consider to use GammaLn for positive values.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> value</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="GammaLn" class="method">
		<h4>double <strong>GammaLn</strong>(double value)</h4>
		<div class="content">Returns the natural logarithm of Gamma for a real value > 0.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> value</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="GammaRegularized" class="method">
		<h4>double <strong>GammaRegularized</strong>(double a, double x)</h4>
		<div class="content">Returns the regularized lower incomplete gamma function
P(a,x) = 1/Gamma(a) * int(exp(-t)t^(a-1),t=0..x) for real a > 0, x > 0.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Gcd" class="method">
		<h4>long <strong>Gcd</strong>(long a, long b, Int64&amp; x, Int64&amp; y)</h4>
		<div class="content">

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.long">long</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.long">long</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.long">long</span></code> b</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.Int64&">Int64&amp;</span></code> x</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.Int64&">Int64&amp;</span></code> y</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Gcd" class="method">
		<h4>long <strong>Gcd</strong>(long a, long b)</h4>
		<div class="content">Returns the greatest common divisor of two integers using euclids algorithm.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.long">long</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.long">long</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.long">long</span></code> b</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="HarmonicNumber" class="method">
		<h4>double <strong>HarmonicNumber</strong>(int n)</h4>
		<div class="content">Evaluates the n-th harmonic number Hn = sum(1/k,k=1..n).<blockquote>
  See <a href="http://en.wikipedia.org/wiki/Harmonic_Number">Wikipedia - Harmonic Number</a>
</blockquote>

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> n</td>
					<td>n >= 0</td>
				</tr>
			</table>
		</div>
	</div><div id="Hypot" class="method">
		<h4>double <strong>Hypot</strong>(double a, double b)</h4>
		<div class="content">Returns <code>sqrt(a2 + b2)</code>without underflow/overflow.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> b</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="IncompleteBetaRegularized" class="method">
		<h4>double <strong>IncompleteBetaRegularized</strong>(double a, double b, double x)</h4>
		<div class="content">Obsolete. Please use BetaRegularized instead, with the same parameters (method was renamed).

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> b</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="IncompleteGammaRegularized" class="method">
		<h4>double <strong>IncompleteGammaRegularized</strong>(double a, double x)</h4>
		<div class="content">Obsolete. Please use GammaRegularized instead, with the same parameters (method was renamed).

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="IntLog2" class="method">
		<h4>int <strong>IntLog2</strong>(int x)</h4>
		<div class="content">Evaluates the logarithm to base 2 of the provided integer value.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.int">int</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="IntPow" class="method">
		<h4>long <strong>IntPow</strong>(long radix, uint exponent)</h4>
		<div class="content">Integer Power

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.long">long</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.long">long</span></code> radix</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.uint">uint</span></code> exponent</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="IntPow2" class="method">
		<h4>int <strong>IntPow2</strong>(int exponent)</h4>
		<div class="content">Raises 2 to the provided integer exponent (0 <= exponent < 31).

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.int">int</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.int">int</span></code> exponent</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Lcm" class="method">
		<h4>long <strong>Lcm</strong>(long a, long b)</h4>
		<div class="content">Returns the least common multiple of two integers using euclids algorithm.

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.long">long</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.long">long</span></code> a</td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.long">long</span></code> b</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div><div id="Sinc" class="method">
		<h4>double <strong>Sinc</strong>(double x)</h4>
		<div class="content">Normalized Sinc (sinus cardinalis) Function.<blockquote>
  sinc(x) = sin(pi * x) / (pi * x)
</blockquote>

<table>
        <caption>Parameters</caption><tr>
					<td>return <code><span title="System.double">double</span></code></td>
					<td></td>
				</tr><tr>
					<td><code><span title="System.double">double</span></code> x</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div>

<div id="footer">
  <p>Based on v2008.8.16.470 of Math.NET Iridium: Scientific Numerical Library (Math.NET)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>